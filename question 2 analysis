push ebp                                         // push
mov ebp, esp                                     // mov esp to ebp
and esp, 0FFFFFFF0h                             // esp updated, dst=dst&src
sub esp, 40h                                     // subtract esp= esp - 40h , dst=dst - src
call ___main                                     // save return call location
mov dword ptr [esp+18h], 0Ch                    // mov 0Ch to dword ptr [esp+18h]
mov dword ptr [esp+1Ch], 0Fh                    // mov 0Fh to dword ptr [esp+1Ch]
mov dword ptr [esp+20h], 0DDh                   // mov 0DDh to dword ptr [esp+20h]
mov dword ptr [esp+24h], 3                      // mov 3 to dword ptr [esp+24h
mov dword ptr [esp+28h], 1B0h                   // mov 1B0h to dword ptr [esp+28h]
mov dword ptr [esp+2Ch], 36h                    // mov 36h   to dword ptr [esp+2Ch]
mov dword ptr [esp+30h], 10h                    // mov 10h to dword ptr [esp+30h]
mov dword ptr [esp+34h], 43h                    // mov 43h  to dword ptr [esp+34h]
mov dword ptr [esp+3Ch], 0                      // mov 0 to dword ptr [esp+3Ch]
mov dword ptr [esp+38h], 0                      // mov 0 to dword ptr [esp+38h]
jmp short loc_40157F                       // jumb to loc_40157F    
; ------------------------------------------------------ 
loc_401560:                         ; CODE XREF: _main+84↓j
mov eax, [esp+38h]              // mov [esp+38h] to eax
mov eax, [esp+eax*4+18h]        // mov [esp+eax*4+18h] to eax
cmp eax, [esp+3Ch]              // compare src1,src2 set cc based on src1- src2 , copmare eax - [esp+3Ch]= if less than 0 dont jumb
jle short loc_40157A            // jumb less (signed), jumb to loc_40157A 
mov eax, [esp+38h]              // mov [esp+38h] to eax
mov eax, [esp+eax*4+18h]        // mov [esp+eax*4+18h] to eax
mov [esp+3Ch], eax              // mov eax to [esp+3Ch]



loc_40157A:                      ; CODE XREF: _main+6C↑j
add dword ptr [esp+38h], 1     // add 1 to [esp+38h]

loc_40157F:                        ; CODE XREF: _main+5E↑j
cmp dword ptr [esp+38h], 7           // compare src1,src2 set cc based on src1- src2 copmare dword ptr [esp+38h]- 7 = if less than 0 dont jumb
jle short loc_401560                 // jumb less (signed), jumb to loc_401560 
mov eax, [esp+3Ch]                   // mov [esp+3Ch] to eax
mov [esp+4], eax                     // mov eax to [esp+4]
mov dword ptr [esp], offset aD ; "%d"     
call _printf                          // print 
mov eax, 0                            //  mov 0 to eax
leave
retn 
_main endp
