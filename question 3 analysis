
push ebp
mov ebp, esp
and esp, 0FFFFFF0H
sub esp, 20H
call _main
mov dword ptr [esp+1cH], 64H
jmp loc_4015D6
loc_40151B:

	mov ecx, [ESP+1CH]
	MOV EDX, 51EB851FH
	MOV EAX, ECX
	IMUL EDX
	SAR EDX, 5
	MOV EAX, ECX
	SAR EAX, 1FH
	SUB EDX, EAX
	MOV EAX, EDX
	MOV [ESP+18H], EAX
	MOV EAX, [ESP+18H]
	IMUL EDX, EAX, -64H
	MOV EAX, [ESP+1CH]
	LEA ECX, [EDX+EAX]
	MOV EDX, 66666667H
	MOV EAX, ECX
	IMUL EDX
	SAR EDX, 2
	MOV EAX, ECX
	SAR EAX, 1FH
	SUB EDX, EAX
	MOV EAX, EDX
	MOV [ESP+14H], EAX
	MOV ECX, [ESP+1CH]
	MOV EDX, 66666667H
	MOV EAX, ECX
	IMUL EDX
	SAR EDX, 2
	MOV EAX, ECX
	SAR EAX, 1FH
	SUB EDX, EAX
	MOV EAX, EDX
	SAL EAX, 2
	ADD EAX, EDX
	ADD EAX, EAX
	SUB ECX, EAX
	MOV EAX, ECX
	MOV [ESP+10H], EAX
	MOV EAX, [ESP+18H]
	IMUL EAX, [ESP+18H]
	IMUL EAX, [ESP+18H]
	MOV EDX, EAX
	MOV EAX, [ESP+14H]
	IMUL EAX, [ESP+14H]
	IMUL EAX, [ESP+14H]
	ADD EDX, EAX
	MOV EAX, [ESP+10H]
	IMUL EAX, [ESP+10H]
	IMUL EAX, [ESP+10H]
	ADD EAX, EDX
	CMP EAX, [ESP+1CH]
	JNZ SHORT loc_4015D1
	MOV EAX, [ESP+1CH]
	MOV [ESP+4H], EAX
	MOV DWORD PTR [ESP], OFFSET aD ; "%d"
	call _printf
  loc_4015D1:
	ADD DWORD PTR [ESP+1CH], 1

loc_4015D6:
	CMP DWORD PTR [ESP+1CH], 3E7H
	JLE loc_40151B
  MOV EAX, 0
  LEAVE
  RETN
	endp

